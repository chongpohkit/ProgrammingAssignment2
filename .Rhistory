library(datasets)
data(iris)
?iris
dni3 <- dimnames(iris3)
ii <- data.frame(matrix(aperm(iris3, c(1,3,2)), ncol = 4,
dimnames = list(NULL, sub(" L.",".Length",
sub(" W.",".Width", dni3[[2]])))),
Species = gl(3, 50, labels = sub("S", "s", sub("V", "v", dni3[[3]]))))
all.equal(ii, iris) # TRUE
View(iris)
mean(iris[iris[5,]== "virginica"],)
mean(iris[iris[5,]== "virginica",])
mean(iris[iris[,"Species"]== "virginica"),]
mean(iris[iris[,"Species"]== "virginica",])
index<-iris[iris[,"Species"]== "virginica",]
mean(index$Species,na.rm=TRUE)
mean(index$Sepal.Length,na.rm=TRUE)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
data(mtcars)
?mtcars
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
mtcarhp<-sapply(split(mtcars$hp, mtcars$cyl), mean)
abs(mtcarhp[1]-mtcarhp[3])
?debug
setwd("E:/Users/Kit/Documents/Git/ProgrammingAssignment2")
source  cacheMatrix.R
source  cachenatrix.R
source  cachematrix.R
setwd("E:/Users/Kit/Documents/Git/ProgrammingAssignment2")
x <- matrix(c(4,2,5,6), nrow=2, ncol=2)
source.with.encoding('E:/Users/Kit/Documents/Git/ProgrammingAssignment2/cachematrix.R', encoding='UTF-8')
y <- makeCacheMatrix(x)
y
y$get()
z <- cacheSolve(y)
y$get()
x2 <- matrix(c(4,2,3,6), nrow=2, ncol=2)
z <- cacheSolve(x2)
x <- matrix(c(4,2,5,6), nrow=2, ncol=2)
y <- makeCacheMatrix(x)
cacheSolve(y)
source('E:/Users/Kit/Documents/Git/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(4,2,5,6), nrow=2, ncol=2)
y <- makeCacheMatrix(x)
source('E:/Users/Kit/Documents/Git/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(4,2,5,6), nrow=2, ncol=2)
y <- makeCacheMatrix(x)
z <- cacheSolve(y)
z * x
z * y
z %*% x
z %*% y$get()
y$setinv(z)
z2 <-cacheSolve(y)
z2 %*% x
matrix()
source('E:/Users/Kit/Documents/Git/ProgrammingAssignment2/cachematrix.R')
x <- matrix(c(4,2,7,6), nrow=2, ncol=2)
y <- makeCacheMatrix(x)
z <- cacheSolve(y)
print(z)
z <- cacheSolve(y)
print(z)
m = x %*% z
print(m)
y$set(matrix(c(3,2,7,6), nrow=2, ncol=2))
z <- cacheSolve(y)
print(z)
m = y$get() %*% z
print(m)
y$set(matrix(c(3,2,7,6), nrow=2, ncol=2))
z <- cacheSolve(y)
print(z)
m = y$get() %*% z
print(m)
